import { alertService } from "./alertService";

export class AlertScheduler {
  private intervalId: NodeJS.Timeout | null = null;
  private readonly CHECK_INTERVAL = 24 * 60 * 60 * 1000; // 24 horas em milissegundos

  start(): void {
    console.log("üïí Iniciando scheduler de alertas...");
    
    // Executar verifica√ß√£o inicial ap√≥s 1 minuto
    setTimeout(() => {
      this.runAlertCheck();
    }, 60 * 1000);

    // Configurar verifica√ß√£o di√°ria
    this.intervalId = setInterval(() => {
      this.runAlertCheck();
    }, this.CHECK_INTERVAL);

    console.log("‚úÖ Scheduler de alertas iniciado com sucesso. Verifica√ß√£o a cada 24 horas.");
  }

  stop(): void {
    if (this.intervalId) {
      clearInterval(this.intervalId);
      this.intervalId = null;
      console.log("‚èπÔ∏è Scheduler de alertas parado.");
    }
  }

  private async runAlertCheck(): Promise<void> {
    try {
      console.log("üîç Executando verifica√ß√£o autom√°tica de alertas...");
      const result = await alertService.runManualCheck();
      console.log(`‚úÖ Verifica√ß√£o conclu√≠da: ${result.message}`);
      
      if (result.alertsCreated > 0) {
        console.log(`üì± ${result.alertsCreated} novos alertas criados e notifica√ß√µes WhatsApp enviadas.`);
      }
    } catch (error) {
      console.error("‚ùå Erro na verifica√ß√£o autom√°tica de alertas:", error);
    }
  }

  // M√©todo para executar verifica√ß√£o manual via API
  async runManualCheck(): Promise<{ message: string; alertsCreated: number }> {
    return await this.runAlertCheck() as any;
  }
}

export const alertScheduler = new AlertScheduler();